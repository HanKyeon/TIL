

# 20230203

어제 배운 것.

- catch 이후 promise 객체를 반환하면 then으로 이어갈 수 있다는 것.
- catch 이후 catch가 되는지는 아직 체크를 안해봄! 까먹었따.
- 인터셉터 대신 useAPI 훅을 만들어서 catch(() => {return axios({JWT 받아오기}).then((res) => {데이터 세팅}).catch((err) => return err)}).catch((err) => {로딩 끝 에러 세팅 및 에러 보여주기.})

------

- 도메인, 포트, 프로토콜이 다를 때 CORS 에러가 발생한다.
- Cross-Origin Resource Sharing(CORS)
- 서브 도메인도 포함된다.
- 같은 도메인이더라도 포트가 다르면 다른 Origin으로 본다. 그래서 CORS가 발생한다.
- 프로토콜이 달라도 발생한다. http에서 https로 보낸다거나 하는 등
- 외부 삽입된 도메인에서 서버를 빼가려 했을 때, 로컬을 빼가려 할 때 공격을 하는 경우가 있다.

- 결론은 오리진이 같아야 한다.
- docker에서 FE 측에서 nginx가 하나 더 올라가있을 수 있다. 혹은 자체적인 node.js express 서버가 올라갈 수 있다.
- 도커 자체를 볼륨으로 마운트해서 배포 가능. 혹은 도커 위에 노드를 놓고 배포가 가능하나, 되도록이면 서비스를 해주는 FrameWork를 사용하는 것이 좋다.
- npm run serve만 지양해라.
- 배포 관점에서 차이가 있다. FE 서버가 하나 따로 있을 수 있다. 싸피 환경에서는 하나의 공간 안에 나눠 서비스 해야하지만 상용 서비스의 경우, 아키텍쳐를 확정 지을 수 없다.
- 단순 논리적 분해이지 위치는 지멋대로일 수 있다.
- 인스턴스도 논리적으로 분리해둔 것일 뿐이다.
- 빌드를 통해 잘 세팅이 된 상태로 배포해줘야 한다.

- vm을 기준으로 오토스케일링 증설을 이용했다. vm의 단점의 경우, 부팅 할 때 바로 뜨지 않고 1,2분 정도의 시간이 필요하다.
- 그래서 Docker를 쓴다. 빠르게 서버 증설이 가능하다.
- vm 부팅이 1분이면 서비스 전체가 중지되기에 충분하다.
- 쿠버네티스 같은걸 하면 자동으로 세팅대로 동작이 가능하다.
- 이미지만 만들어두면 찍어내기만 하면 되기에 배포 편의성이 증가한다.
- 도커 이미지 같은 경우 동일한 이미지를 사용하는 것이 좋다.

=> 어디까지 도커화를 해야 하는가?
- FE/BE는 필수.
- 배포 효율성 및 편의성 생각.
- DB / Jenkins / nginx는 선택적. DB를 따로 가지고 있으면 배포를 따로 할 수 있다.
- 젠킨스를 도커화 해야하는 이유 : 같은 환경에서 서버를 증설하기 위해 사용. 이미지가 빌드 될 환경을 동일하게 맞추는 것이다.
- 클라 포트는 80과 443을 쓴다.
- 임의의 포트를 사용하면 안되는 이유라면, SSAFY의 경우 사내 port를 쓰기에 막혀있다. 포트 번호를 맘대로 해서는 안된다. 회사 정책 등에 따라서도 달라진다.
- 닫혀있는 포트가 존재하며, 특정 포트가 닫혀있는 경우 전화해서 열어달라 해야한다.
- 임의의 포트를 쓰면 어디선가는 될 수 도 있고, 어디선가는 안될 수도 있다. 포트가 막혀있으니 다른 포트로 접속해야겠다 라는 생각을 사용자가 할 수 없다. 그래서 젠킨스에 도커를 까는 것이다. 현재 싸피 깃랩에 젠킨스가 내장되어 있다. 젠킨스가 깃랩에 물려있기에 해당 젠킨스를 사용해봐도 된다.
- 젠킨스 세팅부터 다시 하고 싶다거나 젠킨스를 도커화 해서 개발하는 환경과 동일하게 맞추고 싶다 하면 따로 젠킨스를 도커에 올려서 사용하면 된다. 깃랩의 경우 이벤트 트리거가 기본 브랜치만 받기에 (master) 마스터에서 빌드하는 것이 부담스럽기에 default 포인터를 dev 쪽으로 돌려서 빌드를 부담없이 할 수 있다. 머지가 진행되면 이벤트ㅏㄱ 트리거되서 젠킨스에서 사용할 수 있다.
- 젠킨스로 도커 이미지를 동일하게 만들었기에 무결성이 보장이 된다.
- DB를 이미지화해서 새로 배포 할 일이 많이 있을까? 옮긴다면 데이터는?
- 빌드 서버를 병렬적으로 추가 증설하는 경우는?

- 443? : JWT를 쓸 것이다. 세션을 거의 쓰지 않을 것이다. JWT를 쓸 것이라면 TLS 레이어에서 보내주어야 한다. 서트봇이라는 것을 쓰면 좋다.
- 회원 가입의 경우 열면 보일 수 있다. http는 그냥 열면 보이며, 반드시 암호화가 필요하기에 tls 레이어를 사용하여 jwt를 주어야 한다.
- 이론 상으로는 안전하다. 젠킨스 기본 포트가 8080이라 충돌이 난다면 포트를 바꿔주면 된다.
- 웹 RTC를 쓰기 위해서도 인증서를 요구하는 경우가 많다. 그렇기에 서트봇을 이용하여 배포를 해주면 도니다.
- 서트 봇은 https 확산을 위해 레칭 봇? 이라는 프로젝트의 상용 프로젝트이다. 보통 실 상용 프로젝트의 경우 루트 인증서를 발급 받아서 사용하는데, 작은 서비스의 경우 대부분 서트 봇을 사용하게 된다.
- 서트 봇이 좋은 이유는 nginx와 사용 시 설정을 알아서 해주게 된다. 다만, 같은 도메인으로 하기에, 틀리면 안된다.
- 기본으로 가지게 된 domain은 ssafy.io일 것이다. 도메인이 맞음녀 좋은데 너무 많이 틀리면 블록을 당한다.
- 무적권 엔터 누르는 것이 아니라, 잘 맞춰서 쳐야한다.
- 예를 들어서 root로 실행하는 좌식들이 있는데, 수도 커멘드로 실행되거나 루트 계정으로 실행되는 경우에, 그 프로세스에서 실행되는 모든 것이 루트 계정으로 실행이 되기에 해킹에 취약해진다. 그렇기에 루트 권한으로 상승 시키는 것은 막아주고, 별도의 사용자 권한을 만들어서 사용하는 것이 좋다.
- 대부분이 사용자 계정을 가지고 있는데, spring boot 같은 경우 별도 지정 안하면 기본 계정으로 돌기에 따로 만들어줘야 한다.































-----

### 특화 프로젝트 설명

- 4차 산업 혁명의 대표 기술들을 바탕으로 프로젝트 실행. 해당 도메인을 이해하고 활용하는데 많은 도움이 되도록 할 것이다. 인공지능 빅데이터 블록체인 모빌리티 메타버스게임. 8기 신규 도메인인 메타버스 게임이다.
- 메타버스 게임 도메인을 추가헀으니 많은 관심 부탁한다.
- 각 도메인 별로 어떤 것이 있는가?

- 인공지능 영상 / 음성
- 빅데이터 추천 / 분산
- 블록체인 p2p거래 / 디지털 화폐
- 모빌리티 스마트홈 / 자율주행
- 메타버스 게임 : 메타버스 기반 뭐시기 저시기

- 담주 화요일에 컨설턴트님이 도메인 별 소개를 할 예정이다. 방송에서.
- 팀 구성 : 공통과 상이하다.
- 특화의 경우 반이 아닌 캠퍼스 안에서 구성하게 된다. 팀 별로 상의해서 원하는 도메인을 선택하게 된다. 도메인 이해를 돕기 위해 2/7 도메인 별 상세 방송이 진행되니 잘 드어줘라.
2/10 도메인 별 우수 프로젝트 소개. 공통 플젝 마지막 주차때부터 도메인 및 팀 구성 진행한다.
팀 구성은 6인 1팀. 전공 비전공 각 2명.
팀 조정이 끝나면 2월 17일 금요일에 확정되고 그 담주 월27일부터 새로 된다.
13일엔 캠퍼스 별 mm채널이 공개된다.
팀 구성이 완료될 시 팀장님이 설문 해주면 된다. 설문을 제출하고 나면 신중해야 한다.
17일 금요일부터 확정된 팀과 함께 특화 플젝 부트캠프를 진행하게 된다.
































