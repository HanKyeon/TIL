
# 20221206

## 리액트 테스트

npx create-react-app 프로젝트명
cd 플젝폴더
npm start

jsx를 사용한다.
class는 js의 예약어라서 jsx에서는 class 대신 className을 쓴다.
데이터 바인딩은 {변수명}
혹은 {함수명}

중괄호를 사용한 데이터 바인딩은 html 속성에도 가능하다. 어디서든 가능하다.

리액트는 인라인 스타일을 줄 수 없다. jsx이므로, js에서 쓰는 민감한 기호들이 많아서 그렇다.
쓰기 위해서는 중괄호 안에 { {color: "blue"} } 이런 식으로 객체 형태로 넣어서 해야한다.
`style={{ color: "blue", fontSize : '30px' }}`
`- 기호는 사용 금지`
`우측(값)은 항상 문자열`
`{ color: "blue", fontSize : '30px' }`이 값을 변수로 저장해서 style={변수} 이런식으로 선언 가능.

그래서 보통 클래스에 쓴다.

## state
`import {userState} from "react"`

state는 변수 대신 쓰는 데이터 저장 공간

`let [글제목, 글제목변경] = useState("남코추") // [a:입력한 값. 남코추 들어감, b: 데이터를 수정해주기 위한 함수]`
이런 식으로 사용함. useState는 2개가 들어있는 리스트 값을 반환.
들어갈 수 있는 값은 문자, 숫자, array, object 등 전부 저장 가능.

state의 장점 : react를 웹app처럼 동작하게 만들기 위해서는 필수.
state는 변경이 될 때, 해당 변수가 사용된 html을 rerendering 해준다.
즉, 자주 바뀌는 중요한 데이터는 변수 말고 state에 저장해주어야 한다.




















































































