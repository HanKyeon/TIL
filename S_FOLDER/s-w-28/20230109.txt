
# 20230109

- 반 그라운드 룰: 라방 없는 날은 9시 시작, 있으면 유라 끝난 후. 종례는 5시 반. 쉬는 시간은 팀 별 자율. 1회 최대 20분 넘지 않게. 팀 별 업무 무리 없이. 볼륨 조정. 점심은 11:10까지 변경 x. 2반과 선후는 조정 예정.
- 데일리 스크럼으로 시작. 날마다 하는 짧은 회의. 매일 현재 상태를 업데이트 하고 조율하는 것. 최대 15분 이내. 팀원이 돌아가며 3가지 질문에 답변. 지난 스크럼부터 지금까지 내가 완수한 것? 다음 스크럼까지 내가 하기로 한 것? 현재 장애가 되고 있는 것?
- 
- 협업 툴 사용. 깃랩, 지라, mm, webex 사용. 그 외 협업 툴 사용 시 팀 비공개 채널 Header를 통해 컨설턴트/코치와 공유. 팀 헤더에 링크를 걸 수 있도록 알려줄 것이다.
- 적극적인 참여. MM 공지 확인 시 이모지 남기기.
- 유라 it 인사이트 같은 다양한 내용이므로 웬만해서 들어줘라.
- 칸 반 보드 하면서 보면 좋을 것.
- 서브 플젝 2,3은 묶여서 간다. 1은 개인 학습에 치중됨.
- 평가는 4회. 매번 팀원들 상호 평가. 평가 4회. 3회 팀 평가. 2회는 발표 평가.

- 1주차 : 깃/지라 배정이 될 것. 생성 및 스켈레톤 코드 다운로드. 이번주만 쓰는 지라이다. 일반적인 깃랩 사용과 다르다.
 개인별로 명세서와 스켈레톤 코드로 학습 진행. 각자 플젝에서 선택한 기술 stack에 대한 학습 진행. 팀원이름의 폴더 생성 후 README.md에 일자 별 진행사항 기록. Branch 구분도 추천. 학습이 중요해진다. 1주간 시간을 활용하여 플젝에 도움이 되는 것들 학습. sockJS를 하자. 개인 폴더에 매일 학습한 내용 적기. 반드시 README 파일 작성. TIL 정리 역시 올리면 좋다.
 팀 별로 깃랩 루트 폴더 혹은 따로 폴더에 정리해서 올려라.
 이번주 내로 기획 픽스, 요구사항 명세서 작성. 개인 공부 / 기획에 중점. React, Redux, react-dom, React-router-dom, 당일 공부 당일 정리 후 커밋 푸쉬해라.
 팀 미팅 강제로 진행. 개인 평가, 상호 평가만 존재.

- 2주차 : 명세서 2, 3 진행. 컨벤션, 깃 브랜치 등을 만들기.
 아키텍쳐 설계, DB 설계, 화면 설계, API 설계. API는 안본다. DB 설계 및 화면 설계로 파악 할 것이다.
 어떻게 할 것인지, 조언을 어떻게 줄 것인지 등등.
 일정 설정. 5주차 까지만 개발 일정 설계. 막주는 현실적으로 개발만 집중하기 힘들다. ucc 제작, 발표자료 등 버퍼를 두어야 문제가 생겼을 때 처리 할 수 있다. 학습을 병행하기에 속도를 모른다. 일정 우선순위는 필수이다!

- 3주차 : AWS EC2 서버 제공.
 배포 환경 구성 : CI/CD, 무중단 배포 등을 해야한다. 서버 구성을 간단히 한다고 못하는 것이 아니다. 미리 공부해두면 좋다. 배포에 뺏기는 시간을 아낄 수 있다. 배포에. 코치님들 헬프 십가능.
 발표 평가 있음. 진행 한 기획/설계를 기준으로 발표. 마지막 발표의 앞 부분이 될 것이다. 미리 꼼꼼히 해두면 막 발표 때 조금 더 편하게 잓어 가능하다. 기획의도, 시장 분석 등.
 이 때는 시연은 굳이.

- 4주차 : 개발에만 집중. 아무것도 없음. 레벨업해서 열심히 개발해야 한다.
 평가 존재. 발표는 없음. 금요일 이전까지 진행된 내용을 서버에 배포. 진행 사항 배포 기준으로 컨설턴트/코치에게 시연 및 질의응답 진행.
 웬만큼 모양이 나와있을 것이다. 코치와 함께 팀 별로 미팅하며 문제점, 남은 기간 사용처 등 프로젝트를 어떻게 할 것인지를 길게 가져 갈 것이다.
 10개 팀이기에 목요일 시작 가능.

- 5주차 : 개발 일정 상 마지막 주. 끝날지는 모른다.
 5주차 후반~6주차 초반은 컨설턴트 QA 진행. 팀 진행에 따라 test 일정 확정. test 후 결과 feedback 제공. test 결과를 중심으로 남은 일정에 대한 의견 나눔. 어떤 의견을 주실 것이고 어떤 방향으로 프로젝트를 진행 할 지.
 평가 X.

- 6주차 : 잔여사항 정리. 잔여사항 개발, 오류 수정, 완성도 향상, 기능 추가 등등, ucc 제작, 발표. 최종 시간 15분. 시간 엄수. 라이브 시연은 반드시 들어가야 함. 환경 상 안된다면 영상 촬영이 가능하나 비추천한다. 그런 경우 얘기해줘라.
 최종 발표 뒤에는 특화 진행할 것이다. 6주차 때 팀 빌딩도 하게 된다. 좋은 성적은 지역 발표를 한다. 본선 발표회 준비.

자기주도 학습니다.

- 데일리 스크럼은 존대로 일상은 반말로 어떤지?
- 꾸준한 소통을 해야한다. 내 작업 / 팀원의 작업 등을 알아야 원활하게 개발이 진행 될 수 있다.


UML 다이어그램 작업
아키텍쳐 설계

API 작업 => BFF를 도입?

와이어 프레임 작업

# 피드백

페이스 메이커 : 웹 RTC가 약하다. 스탑워치 등을 사용하시는 분들이 있다. 처음 보는 서비스. 어떻게 하느냐에 따라서 특이하게 달라질 수 있을 것이다. alert 기능인데 이게 **웹일 필요가 있나?** 라는 질문에 취약하다. 웹이 디바이스 접근 권한 관련해서 문제가 있을 것이다. 윈도우 어플 전문으로 할 것이 아니라면 위험 할 것이다.

발표 플랫폼 : ai적인 부분들을 적용해야 한다. face api 등을 이용해서. 역겨움도 나올 수 있음. 역시 개인. 문제점이라면 한 방에 몇명까지 들어갈 수 있을지? 라는 물음이 부정적이다. 해당 부분은 제약을 걸면 된다.

랜선 파티 : 게임. 비대면 게임 나쁘다 좋다보다 많이 해온 것이기에 참신하지 않고, 퀄로 찍어 눌러야 할 것이다. 팀 간 평가에서 창의성 부분에서 높은 점수를 얻을 수 없을 것 같다.

1인 가구를 위한 웹 RTC 서비스 : 그 외의 부분이 약한 상태이다. 뭐 중고거래 라던가 넣으면 될듯?

꿈의 일상 : 멘토링인데, 기업이나 학회에서 한다고 해서 억지로 하는 담당이 얼마나 열심히 할 것인가? 멘토링 끌려오신 분과 열심히 하신 분 차이가 있다. 서비스에서 나타나진 않지만 기획에서는 고민해봐야 한다.

협업 툴 : 엄청 커질 수도 있고,,, 높은 쪽이 좋은 듯 하다.

- 페이스메이커 : 휴식 했던 시간 등 체크해서 정보를 제공. 그런 부분에서 조금 더 직관적으로 사용자들의 기록을 그래프로, 데이터를 어떻게 가공해서 그래프로 보여줄 것인가 고민. 자세 교정에서 거북목을 티쳐블이 잡기 힘들 것이다. 그런 부분을 고려해야 한다.
=> 사용자가 기준을 잡아서 하는건 어떨지.
=> 티쳐블은 특정 부위에 점을 찍어서 판단하는 것인데, 형태를 얼마만큼 붙었는가를 인식하기는 어렵다. 끄덕인다 ok. 고개가 숙여졌다 어려움.
=> 티쳐블이 사용자의 자세를 학습했다 라는 것이 있는데, 주위 의견에서 사용자가 학습하고자 하는 이미지를 올리는 것이 까다롭다. 그래서 데브 쪽에서 올리고 학습하는 것은 쉽다.
=> 영상이냐 사진이냐 따라 다르다. 미리 학습시켜둔 모양과 가까워야 더 인식이 잘 된다. 학습 후 해보기 하면 점수가 나오기에 점수가 나올 수 있을 것이다.
=> 정보를 계속 얻어 가는데 어떤 통계에 대한 정보를 보여주는 것이 중요하다. 끝나고 났을 때 데이터 정리가 잘 되어야 한다.
=> 당신 이렇게 일하면 언제쯤 죽을 수 있을거다 이런 식의 유쾌함으로 하면 좋을듯.

랜선 파티 => 많다.
사회 공헌 => 볼륨이 적다.

재미 면에서 임팩트가 있을 것이다.






































