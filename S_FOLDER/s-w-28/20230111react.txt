
# 20230111

vitest를 사용한다.

컴포넌트 테스트
- 컴포넌트 로직 작성에 앞서
- 컴포넌트 요구 조건 고려(설계)
- 테스트 코드 작성
- 테스트 코드 통과되도록
- 컴포넌트 로직 구현
- 테스트.

컴포넌트 파일을 받는다.

data-test

vite에 구성도니 테스트 코드를 쓰면 된다.

테스트틑 testing library 라는 라이브러리를 써서 사용하고 있다.
커맨드 라이브러리를 많이 쓰고 있다. 백에서 쓰고 말고는 알아서 하면 된다.

https://unpkg.com/pretendard@1.3.6/dist/web/static/pretendard.css

테스트 코드를 하려면 test id가 필요하다. 접근성을 올리려면 내비게이션 제목이 필요하다.

Headings Map 

테스트는 컴포넌트가 잘 
```

```
jest-dom으로도 테스트 가능.
vitest 익스텐션이 있음녀 가능. https://marketplace.visualstudio.com/items?itemName=ZixuanChen.vitest-explorer

test는 타입 값도 있어야 한다.

사실 테스트는 디자이너가 해야한다.
figma에서 컴포넌트 테스트가 가능하다.
component의 test 로직이 있다. 테스팅의 시각적ㅇ니건 스토리북.
컴포넌트 주도 개발을 하려면 테스트 코드를 작성해야 한다.
문제가 된다면 해결 -> 문제 -> 해결 반복.

navigation으로 screen에 필요한 내용이 있는지 확인하고 테스트를 해준다. toHaveClass() 등등의 테스팅을 해준다. 이렇게 행동 했을 떄 클래스가 있는가? 등등을 테스팅이 가능하다.

api를 정리한 내용이 있으니 확인해봐라 vite.
summary 작성을 안하는 사람이 있다.

체크리스트를 작성하고 컴포넌트가 해당 조건들을 만족 하는가를 테스트하는 것이다.
story book을 배울때는 컴포넌트 주도 개발에 대해 들을 것.

렌더링 되고 나면 정규식이 가능해진다 생각 할 수 있는데 안될 수 있다.
쿼리 셀렉터 독스가 있다. 확인하면 된다. 정규식이 아니기에. 실제로는 string으로 문자상만 허용해준다. 그래서 공식문서를 생활화 하는 것이 좋다.

React docs의 Lifting State Up 이라는 내용을 보면 

이미지 타입은 alt : stirng, src: string, showTitle: boolean 등등 타입 스크립트로 설정이 가능하다. 타입스크립트 인터페이스를 넣어서.

타입 스크립트는 친절한지.. 엄한건지... 빠진거 다 밑줄 그어준다.

타입스크립트 는 JSX도 봐준다! 퀵 솔브를 통해 어떻게 하는지도 보여준다!

TS를 쓰면 잘못된 부분이 있을 경우 ts error를 해결해야, test에서 성공해야 커밋과 푸쉬가 된다.

야무씨 너무 잘하시네요....

- 생각해보니 오늘 코치님께 들은 빌드 파일의 실행 방법 (npm install \n npm satrt) 등을 작성하여 실행하는 부분을 만드는 것인 것 같다. 그것부터 시작하신걸 생각해보면 정말 대단한 분인거 같다..

단방향 데이터 흐름이기에 props의 값을 변경하지 못한다.
단, create-react-app의 경우 해당 부분을 알아서 막아주지만 vite를 이용하여 수동으로 만든 경우, 해당 부분을 따로 처리해줘야 할 것 같다.

























