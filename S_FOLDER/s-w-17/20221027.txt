
# 20221027

- 블로킹/논블로킹 개념.

- 동기와 비동기. 동기는 스택, 비동기는 여러개의 스택?
- 비동기 처리는 짜스로만 가능한가? No. Web API / 콜스택 / 태스크큐 / 이벤트 뤂
- 짜스 비동기의 핵심은 AJAX
- 짜스가 동작 가능한 특정한 곳을 런탐이라 한다.

- Axios는 파이썬의 requests와 같다. 하는 역할이 완전히 같다.

- 콜백 함수 사용 이유는 순차적으로 처리하기 위함이다.
- 비동기와 동기를 섞어서 작업 할 것이다. 콜백으로도 다 가능한데, 콜백 지옥에 빠지게 되기에 프로미스가 등장. axios({객체}).then().then.then.....catch

## AJAX
- 짜스로 비동기처리로 HTTP 프로토콜을 주고받는 기술.
- HTTP에서 프로토콜을 비동기로 받는 것. 라이브러리도 굉장히 많다.
- AJAX는 짜스에서 비동기 처리하는 기술이고, AJAX를 라이브러리로 만든 것이 Axios. Vue.js에서는 공식 앱이고, Axios 코드는 Promise 객체로 이루어져 있고 then이다.

- 액시오스 공식문서를 보는걸 연습해라.

axios.get()의 반환값은 Promise 객체, .then의 반환값은 Promise객체. then이 하나라도 실패하면 callback 실행. then은 이전 객체에서 return 값이 다음 콜백의 첫번째 파라미터로 들어온다.

프로미스 객체를 받아오므로 then chaining을 통해 로그인 실패 시 어떤 로그를 띄우고 어떤 페이지로 이동시켜주는 등의 chaining이 가능하다.

AJAX 특징
- 페이지 전체를 reload 하지 않고서도 수행되는 비동기성.
- 서버의 응답에 따라 전체 페이지가 아나ㅣㄴ 일부분만을 업데이트 가능.
1. 페이지 새로고침 없이 서버에 요청
2. 서버로부터 응답을 받아 작업을 수행.

form이 이제 요청을 보내면 안되고, Axios가 비동기로 보내야 한다.
즉, form의 메소드들, action과 method는 다 사라진다. addEventListener로 선택할 때 필요한 id가 달려야 한다. 코드는 다 있으니 따라해라.
preventDefault로 submit이 가진 특성을 없애준다. 이제 굳이 form이 아니어도 div, a 등 여러가지 가능하다. form을 사용하는 이유는 헷갈릴까봐. div가 클릭되면 등의 조건으로 POST 요청을 Axios로 보낼 수 있다. 그렇기에 form일 필요가 없다. 일단 form으로 되어있으므로 form으로 해봐라.

axios({}) 이런 식으로 보내준다. 내부 객체의프로퍼티 명은 독스 봐라 독스. 독스 쵝오

Id 값이 필요하다. 좋/팔 같은 경우. 짜스와 request? response 데이터를 동기화 해야 한다. 돔트리에 있거나 유저가 요청 할 ㄸㅐ id값을 넣어주거나. 
장고 dtl 문법으로 data-* 를 통해 속성에 담아서 넘겨줄 수 있다. 하나의 속성에 내가 원하는 데이터를 숨겨둘 수 있다. DTL을 이용하여. data-user-id로 적으면 event.target.dataset.userId 이런식으로 받아온다. event.target 은 이벤트 객체 안에 있는 target은 해당 태그의 덩어리가 불리는듯?

-- DTL이 아닌 방법으로 어떻게 가져오지? --
-> 모질라에 있는 답이다.
csrftoken은 어떻게 보내야 하는지? : 공식 문서에 있다. form 태그에서 담겨서 오는 csrf 토큰을 확인해야 한다. axios 안에 있는 csrf 토큰을 확인하고 post 요청을 보낼 것이다.

보낼 때 csrf 토큰을 담아줘야 하기에 빼와서 던져준다. headers 안쪽에 X-CSRFToken : csrftoken 이런식으로 공식문서에서 명시되어 있다.

XHR 객체 : pass 이따 하겠다.


# 시리얼라이저에서, to_representation을 통해 _set 매니저 대신하기.
https://gaussian37.github.io/python-rest-nested-serializer/

































