


# HTML / DOM

 - html : 
 구조 담당이다. 계산을 할 수 없다. 엄밀히 따지면 프로그래밍 언어는 아니지만 언어라고 한다. 하이퍼 텍스트 마크업 랭귀지

 웹 페이지를 구조화 하기 위한 언어. 인덴트는 2. 태그와 요소로 이루어져 있다. 요소는 여는 태그와 닫는 태그 사이의 내용이다. 내용이 없는 태그도 존재한다. 요소는 중첩이 가능. 태그 쌍 확인을 잘 해야함.

 html 태그 : 문서의 최상위 루트 요소
 head 태그 : 문서의 최상위 요소. 제목, 인코딩, 스타일, 외부 파일 로딩 등 일반적으로 브라우저에 나타나지 않는 내용. title, meta, link, script, style 등
 body 태그 : 문서 본문 요소. 실 화면 구성과 관련된 내용.

 태그 요소 : 태그와 태그 사이의 내용. 내용이 없는 태그 존재, 엘리먼트의 중첩이 가능.
 속성 : 태그 별로 사용 할 수 있는 속성이 다르며, 속성="" 으로 표기한다. 속성을 통해 태그의 부가정보를 설정하며, 엘리먼트는 속성을 가질 수 있으며, 경로나 크기 등 추가 정보 제공. 요소의 여는 태그에 작성하며, 이름과 값이 쌍으로 존재한다. 태그의 종류 관계 없이 사용 가능ㅎ낟 속성 HTML Global Attribute들이 있음. 글로벌 속성으로는 id, class, data-*, style, title, tabindex 등이 있다.

 시맨틱 태그 : 행하는 행위는 div나 spam과 다를바가 없지만, 보기 쉽도록 태그에 이름을 붙인 것. 기능은 없으나, 의미는 있다. header, nav, aside, section, article, footer 등이 있다. 검색엔진 최적화에서 메타태그, 시맨틱태그 등을 통한 마크업이 이용된다. 가독성 증가, 유지보수 난이도 하락

 - DOM :

 Document Object Model.

 텍스트 파일인 HTML 문서를 브라우저에 렌더링 하기 위한 구조이다. HTML 문서에 대한 모델을 구성하며, HTML 문서 내의 각 요소에 접근/수정에 필요한 프로퍼티와 메서드를 제공함.

 인라인요소, 블록요소 등을 통해 사용된다. form, 텍스트 요소, 그룹컨텐츠(리스트 등), input, input label 등을 분석하여 만들어진다.

 렌더링과 DOM을 통한 분석으로 화면에 그린다.



# 부트스트랩 Grid System

 - 빠르게 반응형 웹을 만들 수 있도록 도와주는 도구. CDN 혹은 다운을 통해 사용한다.
 - 스페이싱. 1,2,3,4,5가 각각 4 8 16 24 48 px 이다.
 - 컴포넌트 : 기본적으로 부트스트랩이 제공하는 예시?들.

 - 그리드 시스템 :
 - 요소들의 디자인과 배치에 도움을 주는 시스템.
 - column, gutter, container로 이루어져 있다. 실제 컨텐츠박스, 박스 사이의 간격, 그것들을 담은 공간.
 - 플렉스 박스로 제작되었다.
 - 12개의 column, 6개의 breakpoints.



# 반응형 웹 :

 - 화면의 크기에 따라, 실제 창이 보여지는 창의 px에 따라 반응하여 생김새를 바꾸는 것
 - 웹 디자인에 대한 접근 방식, 반응형 레이아웃 작성에 도움이 되는 사례들의 모음 등을 기술하는데 사용되는 언어.



# CSS 선택자 * . # x 

 - * : 전부 다 적용한다
 - . : 클래스
 - # : 아이디
 -    : 태그

 - > : 자식 결합자.
 -    : 자손 결합자.
 - ~ : 일반 형제 결합자. 자신 뒤의 형제요소 전부 적용
 - + : 인접한 형제 요소 중 바로 뒤에 위치하는 요소 적용



# CSS 박스모델

 - 모든 것은 박스다. 좌상단으로 쌓이며, 인라인 요소는 한 줄에 쌓이며, 블록 요소는 한 줄을 차지한다.
 - 마진/보더/패딩/컨텐츠.
 - 보더(테두리)와 컨텐츠가 있으며, 컨텐츠와 보더 사이가 패딩, 보더에서 밀어내는 것이 마진.
 - 1개 쓰면 4개 적용, 2개 쓰면 상하/좌우, 3개 쓰면 상/좌우/하, 4개 쓰면 시계방향.
 - 박스 사이즈는 보더까지의 길이이다. 컨텐트 박스가 기본 설정으로 되어있는데, 보더 박스로 설정을 해야 원하는 크기로 만들 수 있다.

 - 여백 상쇄란, 마진과 마진이 만나서 상쇄가 되는 것이다. 더 큰 마진으로 상쇄된다. 단, 플로팅 요소와 absolute를 지정한 요소의 여백은 상쇄되지 않는다.



# CSS 우선순위 등등 외부 내부 인라인 등

 - 인라인 내부참조 외부참조 등이 있다.
 - css 적용 우선 순위는 아래와 같다.

 !important > 인라인 > id > class, 속성, pseudo-class > 요소, pseudo-element > css 파일 로딩

 - css 파일 로딩 할 때 rel속성이 stylesheet로 되어 있어야 한다.



# 크롬 개발자 도구 많이 써보세요

 - 넹
 - Elements를 볼 수 있다.
 - style을 통해 적용된 스타일 확인 가능
 - Computed를 통해 최종 css 박스모델 확인 가능.
 - 레이아웃을 이용해 디스ㅌ플레이 확인 가능



# CSS Position 개념 Mdn 들어가서 확인해라

 - position은 속성.
 - relative : 자리는 차지하고, 보이는 것을 이동
 - fixed : 아예 자리도 벗어나 뷰포트 기준으로 위치. 우하단이 기본 위치. 문서 흐름에서 제거되어 레이아웃에 공간을 차지하지 않음.
 - absolute : 절대 위치. 일반적인 문서 흐름에서 제거되며, 레이아웃 공간을 벗어나 가장 가까이 있는 부모/조상 요소를 기준으로 이동한다.
 - sticky : 스크롤에 따라 static과 fixed를 오가는 포지션이다.



# Flexbox Froggy 기본 + 깨구락지 여러마리. 꼭 해봐라

 - Flexbox

 - display : flex로 설정 가능.

 - 메인 액시즈, 크로스 액시즈를 축으로 저스티파이, 얼라인 사용

 - .flex-container에 주로 넣어준 뒤, 클래스로 적용해준다.

 - flex-direction의 속성으로는 row, row-reverse, column, column-reverse가 있다. 리버스 하면 방향이 바뀐다. 꼬지가 바뀐다고~

 - flex-wrap : flex item이 flex의 컨테이너를 벗어날 경우, 보통은 다음 줄로 넘어가는데, 다음줄로 넘어가지 않도록 만듬.

 - flex-flow : flex-direction과 flex-wrap의 짧은 예약어다. direction wrap을 연속으로 적어준다. flex-flow에다.

 - 저스티파이 : 꼬챙이 기준으로 꼬챙이에서 정렬. 기본값에서 수평 정렬에 이용.
 - start, end, center, between, around evenly가 있다.
 - start는 기본값, end는 끝정렬, center는 중앙정렬, between은 아이템 사이를 균등하게, around는 아이템을 둘러싼 영역을 균등분배, evenly는 전체 영역 내 아이템 간격을 균등하게 분배.

 - 얼라인 : 꼬챙이 수직 기준으로 정렬. 기본값에서 수직 정렬에 이용된다.
 - align에는 stretch, start, end, center, baseline이 존재.
 - align-self는 개별 아이템에 해당 설정을 적용 할 때 사용한다.
 - stretch는 기본값 기준 상하를 가득 채우고, start는 기본값, end는 맨아래, center는 수직정렬, baseline은 글자 밑 라인을 기준으로 정렬하는 것.

 이외에서 꼬챙이 기준으로 남은 영역을 분배하는 grow, 배치 순서를 결정해주는 order 등이 있다.



 %% 추가 정리 사항

 - 속성 display에는 None 속성이 있다. 코드는 있는데 아예 돔트리에 올라가지도 않는 것이다.
 - visibility와의 차이점은 렌더링도 안되느냐, 렌더링이 되는데 보이지 않느냐의 차이이다.
 - display의 속성은 인라인, 블록, 인라인-블록, None, flexbox 등이 있다.
 - flexbox를 사용하지 않고 인라인 요소를 수직정렬 하기 위해서는 line-height 속성을 사용한다.
 - 레이아웃을 지정하지 않으면 normal flow를 따른다.








