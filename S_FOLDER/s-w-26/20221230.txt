
# 20221230

공유데이
잘하면 5만 마일리지 준다.
- 발표 주제 : 한 주 동안 수행했던 자유 주제 중에서 선택해서 진행하면 된다.
- 과제를 해결하며 얻은 꿀팁을 이시간을 통해 보여주면 좋다.
- 발표 파일은 아무거나 상관 없다.
- 발표 이후 상호평가 한다. 피깃->평가->발표평가.
- 주제의 적합성, 내용의 필요성, 내용의 충실성, 전달력, 발표 자료 5가지.

## 부하 테스트 수행

- 부하테스트 : 특수한 상황(수강신청 등)에서 정상적으로 시스템이 동작하는지 보증하기 위한 테스트 도구. 목표 부하 도달 여부 확인, 한계 부하 측정, 부하 중에서 기능 수행 정상 여부 체크.

용어
- 트랜잭션 : 
 한번 처리에 대한 논리적 단위. 사용자가 시스템에 요청을 보내고 response가 오는 것이 1 transaction이라 한다.
- TPS : 
 초당 트랜잭션 수.
- 응답 시간 : 
 응답 오는 시간.

- 주로 보는 것은 TPS와 응답 시간. 트랜잭션도 본다.

### 부하 테스트
- 목표 부하 도달 여부 확인이 목적.
- 목표 부하에 도달하고 어느정도 유지시키며 기능이 문제 없이 작동하면 테스트 종료.
### 스파이크 테스트
- 부하가 일시에 몰릴 때 견디는지 체크.
- 시스템의 한계 부하 체크.
- 수강신청 등의 상황을 시뮬레이션 하여 시스템이 버티는지 확인하는 것.
### 신뢰성 테스트
- 시스템의 신뢰성을 측정하기 위함.
- 부하가 걸린 상황에서 주요 기능이 원활히 수행되는지 체크

## Locust.io를 이용한 부하 테스트.
- testguild.com에서 보면 부하 테스트 순위가 잇다.
- JMeter? 사용법이 난해하다.
- 네이버가 만든 것도 있다.
- JMeter는 리소스를 많이 먹고, 로커스트는 70% 덜 먹는다. 제이미터가 300~400이면 로커스트는 1000명++이다.
- locust.io에서 다운로드 가능.

## 부하 테스트 절차
1. 테스트 목적 확인
 - 한계 부하 측정? 목표 부하 하에서 동작 확인?
2. 테스트 대상 결정
 - 테스트 대상 페이지 선정 및 테스트 시나리오 선정. 많이 몰리는 페이지 설정.
3. 테스트 환경 구축
 - 테스트 서버 준비 및 테스트 서버에 대상 설치.
4. 테스트 수행
 - 테스트 결과 정리 및 분석.

### 목표
- 1학기 관통 프로젝트 결과물에서 랜딩 페이지를 터질 때까지 부하를 올려보면 된다. 로컬 상태에서.
- Locust.io에 document가 잘 되어 있다.
- 보통 250~300 user가 한계이다.

- 테스트 했다면 DB가 쌓이게 된다. 따라서 DB를 테스트 이후에는 CLEAR 해주는 테스트 코드를 추가 해야한다.

# 로깅

- 로깅 : 시스템에서 발생한 사건을 기록하는 것
- 로그 : 로깅의 결과물. 유지보수에 있어 블랙박스와 같은 역할.
- 문제를 찾고, 원인을 찾고, 사용자 행동을 분석하기 위해.

- 파이썬의 경우, 로깅 모듈이 굉장히 잘 되어 있다. Python Logging Module 쓰면 좋다.
- Node는 Winston, Pino, Bunyan

































