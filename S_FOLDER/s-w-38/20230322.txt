
# 20230322

- 어제 배운 것

1. 타입스크립트로 리액트 쿼리의 훅 useMutaion과 useQuery를 조건부로 반환 시킬 때 복잡해진다. 반환되는 타입이 useMutationResult useQueryResult가 아니라, 내부적으로 더 꼬여있나보다. interface의 상속 개념을 찾는게 좋아보인다.
2. 원래는 모든 쿼리를 리액트 쿼리에서 관리하는게 맞지 않을까? 싶었는데, 아닌 것 같다. 필요한 곳에 맞게 작성하는 것이 좋다.
3. 사실 React Query가 보일러 플레이트를 압도적으로 줄여주기 때문에, component fat 하게 코드를 작성해도 될 것 같긴 하다. 하지만, 언제나 마찬가지로, 코드를 모아서 사용하면 편집이 편하기에, 어떻게 모을까를 고민하는 것을 알게 되었다.
4. 기업에서 어떻게 쿼리들을 관리하는지 궁금하다.
5. 4MAT로 정리하는 것이 좋아보인다. 프로젝트에서 왜 선택 했는가에 대한 것도 자연스레 기록이 된다.
6. 리액트, 리덕스, 리덕스 툴킷, 리액트 라우터 돔, 테일윈드css, WEB AP들, 사용했던 티쳐블 머신, 사용한 자바스크립트 문법, 타입스크립트, 액시오스, post css, pure css keyframes&mediaquery 등 하나씩 정리해가면 좋을 것 같다.

---

카카오페이 결제의 경우, 성공/실패/시간초과 url을 다 받기에, 해당 어느 url로 왔느냐에 따라 redux에서 성공, 실패를 설정해서 post 요청을 mutation으로 보낸 뒤, 다시 페이지로 리다이렉트 하면 될 것 같음.










