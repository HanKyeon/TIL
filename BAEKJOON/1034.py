'''
램프

직사각형 모양의 탁자
각 열의 아래에는 스위치가 하나씩
이 스위치를 누를 때마다 그 열에 있는 켜져있는 램프는 꺼지고, 꺼져있는 램프는 켜진다

만약 어떤 행에 있는 램프가 모두 켜져있을 때, 그 행이 켜져있다고 말한다.
스위치를 K번 누를 것이다. 서로다른 스위치 K개를 누르지 않아도 된다.
스위치를 K번 눌러서 켜져있는 행을 최대로 하려고 한다.

탁자에 있는 램프의 상태와 K가 주어졌을 때, 스위치를 K번 누른 후에 켜져있는 행의 최댓값을 구하는 프로그램을 작성

입력
N과 M 제시. N은 행 M은 열. N과 M은 50보다 작거나 같은 자연수.
테이블 정보
스위치 몇번 누를지 K 1000이하 음아양정
'''
n, m = map(int, input().split()) # n*m
g, k = [input() for _ in range(n)], int(input()) # 그래프, 횟수
zg = list(map(lambda x:x.count('0'), g)) # 각 행의 0 갯수 (zero graph)
ag = [i for i, v in enumerate(zg) if k >= v and v % 2 == k % 2] # 켜질 수 있는 줄의 인덱스 k보다 작아야한다. (answer graph)
mc = 0 # 답
for i in ag: # 인덱스 훑으면서 같은게 몇개인지 확인
    mc = max(mc, g.count(g[i])) # 큰 값을 답에 저장
print(mc) # 출력

# 똑같이 생긴게 아니면 절대 같이 못켜진다!
# 같은 상태가 아니라면 누를 때마다 각 상태가 변하기에 같이 켜질 수 없다!
# 즉, 행이 켜지게 하는 조건으로 걸러서 풀면 된다!

