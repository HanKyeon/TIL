'''
늑대 사냥꾼

n, m 그래프
. 빈 공간
+ 나무 (이동 가능)
V 현우
J 목적지
R행 C열. 나무가 A행 B열이라면 사이 거리는 차이 절댓값 합.

가장 안전한 길이란, 현우가 이동하는 모든 칸에서 나무와 거리 최솟값이 가장 큰 경로. 오두막 역시 나무 거리 계산해야 한다.

입력
n, m 제시.
n개 줄 그래프 제시

출력
가장 안전한 경로에서 나무와 현우와 거리의 최솟값
'''
import sys
from heapq import heappop, heappush
from collections import deque
input = sys.stdin.readline

mov = [(-1,0),(0,1),(1,0),(0,-1)]

n, m = map(int, input().rstrip().split())
trees = []

for i in range(n):
    s = list(input().rstrip())
    for j in range(m):
        if s[j] == 'V':
            sh, sw = i, j
            s[j] = '.'
        elif s[j] == 'J':
            eh, ew = i, j
            s[j] = '.'
        elif s[j] == '+':
            trees.append([i, j])

def bfs():
    global n, m , eh, ew, sh, sw
    dst = [[-1 for _ in range(m)] for _ in range(n)]
    q = deque()
    for h, w in trees:
        dst[h][w] = 0
        q.append((h, w))
    while q:
        h, w = q.popleft()
        for dh, dw in mov:
            nh, nw = h+dw, w+dh
            if nh < 0 or nw < 0 or nh >= n or nw >= m:
                continue
            if dst[nh][nw] < 0:
                dst[nh][nw] = dst[h][w]+1
                q.append((nh, nw))
    return dst

def path():
    global eh, ew, n, m, sh, sw
    pq = []
    v = [[False for _ in range(m)] for _ in range(n)]
    ans = dst[sh][sw]
    heappush(pq, [-dst[sh][sw], sh, sw])
    v[sh][sw] = True
    while pq:
        c, h, w = heappop(pq)
        ans = min(-c, ans)
        if h == eh and w == ew: break
        for dh, dw in mov:
            nh, nw = h+dw, w+dh
            if nh < 0 or nw < 0 or nh >= n or nw >= m:
                continue
            if not v[nh][nw]:
                v[nh][nw] = True
                nc = dst[nh][nw]
                heappush(pq, [-nc, nh, nw])
    return ans

dst = bfs()
ans = path()
print(ans)

'''
from collections import deque
from heapq import heappop, heappush
import sys
input = sys.stdin.readline
N, M = map(int, input().split())
matrix = [list(input().rstrip()) for _ in range(N)]
visited = [[1] * M for _ in range(N)]
sx, sy, ex, ey = 0, 0, 0, 0
start = deque()
for i in range(N):
    for j in range(M):
        if matrix[i][j] == '+':
            start.append((i, j))
            visited[i][j] = 0
        elif matrix[i][j] == 'V':
            sx, sy = i, j
        elif matrix[i][j] == 'J':
            ex, ey = i, j
dx, dy = [0,0,1,-1], [1,-1,0,0]
while start:
    x, y = start.popleft()

    for i in range(4):
        nx, ny = x + dx[i], y + dy[i]
        if 0 <= nx < N and 0 <= ny < M:
            if visited[nx][ny] == 1:
                visited[nx][ny] = visited[x][y] - 1
                start.append((nx, ny))
start = []
result = sys.maxsize
s_visited = [[0] * M for _ in range(N)]
s_visited[sx][sy] = 1
heappush(start, [visited[sx][sy], sx, sy])
while start:
    t, x, y = heappop(start)
    if result > -t:
        result = -t
    if x == ex and y == ey:
        print(result)
        break
    for i in range(4):
        nx, ny = x + dx[i], y + dy[i]
        if 0 <= nx < N and 0 <= ny < M:
            if not s_visited[nx][ny]:
                s_visited[nx][ny] = 1
                heappush(start, [visited[nx][ny], nx, ny])
'''


'''
import sys
from heapq import heappop, heappush
from collections import deque
input = sys.stdin.readline

mov = [(-1,0), (0,1), (1,0), (0,-1)]

def meetingtree():
    global n, m
    for h, w in trz:
        mt[h][w] = 0
    q = deque(trz)
    while q:
        h, w = q.popleft()
        for dh, dw in mov:
            nh, nw = h+dh, w+dw
            if 0<=nh<n and 0<=nw<m and mt[nh][nw]<0:
                mt[nh][nw] = mt[h][w]+1
                q.append((nh, nw))

def dij():
    global n, m, eh, ew, sh, sw
    v = [[101]*m for _ in range(n)]
    v[sh][sw] = -mt[sh][sw]
    heap = [(-mt[sh][sw], sh, sw, mt[sh][sw])]
    while heap:
        frt, h, w, ret = heappop(heap)
        for i in v:
            print(i)
        print('===', h, w)
        if v[h][w] < frt:
            continue
        if h == eh and w == ew:
            return ret
        for dh, dw in mov:
            nh, nw = h+dh, w+dw
            if 0<=nh<n and 0<=nw<m:
                if v[nh][nw] <= frt:
                    continue
                a = max(-mt[nh][nw], frt)
                b = min(ret, mt[nh][nw])
                v[nh][nw] = a
                heappush(heap, (a, nh, nw, b))

n, m = map(int, input().rstrip().split())
trz = []
for i in range(n):
    s = input().rstrip()
    for j in range(m):
        if s[j] == '.':
            continue
        elif s[j] == '+':
            trz.append((i, j))
        elif s[j] == 'V':
            sh, sw = i, j
        elif s[j] == 'J':
            eh, ew = i, j

mt = [[-1]*m for _ in range(n)]
meetingtree()
for i in mt:
    print(i)
print('========', 'mt')
print(dij())
'''
'''
V...................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
....................................................................................................
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.
....................................................................................................
.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
...................................................................................................J
'''


