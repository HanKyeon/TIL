'''
비암

Dummy라는 도스 게임이 있다.
뱀이 사과를 먹으면 길이가 늘어나고, 시작지점은 좌상단 시작길이는1 방향은 오른쪽.

뱀은 매초 이동. 아래 규칙
먼저 몸길이를 늘려 머리를 다음칸에 위치
만약 이동한 칸에 사과가 있다면, 그 칸에 있던 사과가 없어지고 꼬리는 움직이지 않는다.
만약 이동한 칸에 사과가 없다면, 몸길이를 줄여서 꼬리가 위치한 칸을 비워준다. 즉, 몸길이는 변하지 않는다.

사과의 위치와 뱀의 이동 경로가 주어질 때 이 게임이 몇초에 끝나는지 계산.
종료 조건은 벽 또는 자기 자신의 몸과 부딪히면 게임이 끝남.

입력
보드크기 N 2이상 100이하
사과갯수K 0이상 100이하
사과 위치 행, 열 1,1에는 사과x
뱀의 방향 전환 횟수 L 1이상 100이하
L개의 줄 방향 변환 정보. 정수X, 문자C X초 뒤에 L:왼쪽으로 90도 틀기 D:오른쪽으로 90도 틀기

출력
게임이 몇초에 끝나는지 칼출력
'''
# 우 하 좌 상
# L일 경우+1 D일경우 +3 해서 모듈러 연산.
dh = [0, -1, 0, 1]
dw = [1, 0, -1, 0]

n = int(input())
k = int(input())
kl = [tuple(map(lambda x:x-1,(map(int, input().split())))) for _ in range(k)] # 행,열 사과 좌표
l = int(input())
ll = {} # 시간/방향 순서
for _ in range(l):
    ti, di = input().split()
    ll[int(ti)] = di
d, t = 0, 0
he = [(0, 0)] # 머리 좌표
bo = [(0, 0)] # 자기 몸 좌표

while he:
    h, w = he.pop(0) # 행 열

    if t in ll:
        fla = ll[t] # 방향 전환 체크
        if fla == 0:
            pass
        elif fla == 'L':
            d = (d+1) % 4
        elif fla == 'D':
            d = (d+3) % 4

    t += 1 # 시간 추가

    nh, nw = h + dh[d], w + dw[d] # 이동할 좌표
    if 0 <= nh < n and 0 <= nw < n: # 이동하는데 문제가 없으면 머리, 몸에 추가
        he.append((nh, nw))
    else :
        break # 문제 있으면 벽에 닿은거니 탈출
    if (nh, nw) in bo: # 몸에 닿아도 탈출
        break
    elif (nh, nw) in kl: # 사과에 닿으면 사과 없애고 몸에 좌표 추가하고 다시 시작
        kl.remove((nh, nw))
        bo.append((nh, nw))
        continue
    else: # 그것도 아니면 몸에 추가해주고 몸 맨 앞에도 빼줘라
        bo.append((nh, nw))
        bo.pop(0)
print(t)






# 1. 머리가 몸 좌표에 있는지 확인
# 2. 머리가 사과 좌표에 있는지 확인해서 꼬리를 줄일지 말지 확인
# 3. 사과 좌표라면 몸을 줄이고, 아니라면 컨티뉴












'''
6
3
3 4
2 5
5 3
3
3 D
15 L
17 D
결과 9

10
4
1 2
1 3
1 4
1 5
4
8 D
10 D
11 D
13 L
결과 21

10
5
1 5
1 3
1 2
1 6
1 7
4
8 D
10 D
11 D
13 L
결과 13
'''




