'''
가장 긴 증가하는 부분 수열
'''

n = int(input())
nl = list(map(int,input().split()))
d = [0]
d.extend(nl)
dp = [0] * (n + 1)
# dp[1] = 1

for i in range(len(d)) :
    for j in range(i) :
        if d[i] > d[j] :
            dp[i] = max(dp[i], dp[j]+1)

print(max(dp))

'''
[0, 5, 6, 1, 2, 3]
[0, 1, 2, 1, 2, 3]
이전에 가장 많이 만들 수 있는 수열의 길이가 가진 값보다 현재 값이 크다면 +1
'''

"""
백준 11053번 가장 긴 증가하는 부분 수열a

1. 아이디어
- 리스트를 하나 만들어 A를 돌면서 다음 규칙에 의해 숫자를 추가하거나 수정한다
- A의 숫자가 가장 크면 그저 append 한다
- A의 숫자가 가장 크지 않다면 해당 숫자보다 다음으로 큰 숫자와 바꾼다
- 리스트의 길이가 가장 긴 증가하는 부분 수열이다

2. 시간복잡도
- A를 돈다 -> 1000
- 리스트에서 위치를 찾는다 -> 1000
- 1000 * 1000 = 1000000

3. 자료구조
- LIS[]
- A

"""