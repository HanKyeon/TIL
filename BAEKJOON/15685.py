'''
드래곤 커브

드래곤 커브는 3가지 속성. 시작 점, 시작 방향, 세대.
0세대 드래곤 커브는 길이 1 선분, 시작 방향은 오른쪽
1세대 드래곤 커브는 0세대 드래곤 커브 끝 점을 기준으로 시계 방향으로 90도 회전 후 다음 0세대 드래곤 커브의 끝 점에 붙인 것. (마지막 점 기준)
2세대도 돌려 붙이기. (마지막 점 기준)
3세대도 90도 돌려 붙이기. (마지막 점 기준)
즉, K(K > 1)세대 드래곤 커브는 K-1세대 드래곤 커브를 끝 점을 기준으로 90도 시계 방향 회전 시킨 다음, 그것을 끝 점에 붙인 것이다.
크기가 100×100인 격자 위에 드래곤 커브가 N개 있다. 이때, 크기가 1×1인 정사각형의 네 꼭짓점이 모두 드래곤 커브의 일부인 정사각형의 개수를 구하는 프로그램을 작성하시오. 격자의 좌표는 (x, y)로 나타내며, 0 ≤ x ≤ 100, 0 ≤ y ≤ 100만 유효한 좌표이다.

입력
드래곤 커브의 갯수 n 1이상 20이하 제시.
n개 줄에 드래곤 커브 정보 제시.
x, y, d, g. x,y는 드래곤 커브의 시작 점, d는 시작 방향, g는 세대. x, y는 0이상 100이하, d는 0이상 3이하, g는 0이상 10이하
방향은 0 1 2 3 이고 우 상 좌 하 순서

출력
크기가 1*1인 정사각형의 네 꼭짓점이 모두 드래곤 커브의 일부인 것의 갯수 출력.
'''
import sys
input = sys.stdin.readline

dh = [0, -1, 0, 1]
dw = [1, 0, -1, 0]

n = int(input())
g = [[0]*101 for _ in range(101)]
for _ in range(n):
    h, w, di, gen = map(int, input().rstrip().split())
    hma = [di]
    g[h][w] = 1
    for i in range(gen):
        tmp = []
        for j in range(len(hma)):
            tmp.append((hma[-j-1]+1)%4)
        hma.extend(tmp)
    for i in hma:
        nh, nw = h + dw[i], w + dh[i]
        g[nh][nw] = 1 # 체크처리
        h, w = nh, nw

answer = 0

for i in range(100):
    for j in range(100):
        if g[i][j] == 1 and g[i+1][j] == 1 and g[i][j+1] == 1 and g[i+1][j+1] == 1:
            answer += 1

print(answer)
'''
우0 상1 좌2 하3
0세대 0
1세대 0 1
2세대 0 1 / 2 1
3세대 0 1 2 1 / 2 3 2 1
4세대 0 1 2 1 2 3 2 1 / 2 3 0 3 2 3 2 1
'''









