'''
1이 될 때까지.
N에서 1을 빼거나 N을 k로 나눠준다.

행동 최소횟수는?

-> 간단히 가장 좋은 나누기를 우선 실행하면 된다. ㄹㅇㅋㅋ
근데 이제 나눠지는 값까지는 -1로 접근해야쥐~ 못잡게찌~

N, K 입력 받음. N은 2이상 10만이하 / K도 2이상 10만 이하 둘 다 자연수

'''

n, k = map(int, input().split()) # 입력 받음
result = 0 # 일단 결과값 0

while n >= k : # n이 k보다 클 때 빼서 맞춰서 나누고 또 빼서 나누고 할거니까 그렇게 알아
    while n % k != 0: # n이 k로 안나눠지면
        n -= 1 # n에서 1 빼고
        result += 1 # 횟수에 1 더해
    
    n //= k # 나눠지면 k로 나눈 몫이 n이 되는거야~
    result += 1 # 이것도 실행이야

while n>1 : # n이 k보다 작아졌으면 n이 1이 될 때까지
    n -= 1 # 1을 빼고
    result +=1 # 실행 횟수에 더해~

print(result) # 결과

'''
---경계선---
1을 빼는 걸 한 번에 처리해줌.
'''

n, k = map(int, input().split())
result = 0

while True: # 반복해

    target = (n // k) * k # 어차피 우리는 k의 최대배수가 될 때까지 빼야 하잖아
    result += (n - target) # n과 그 최대배수 값의 차이만큼 빼줄거 아니야? 1씩 빼니까 그게 실행 횟수고
    n = target # n을 그 값으로 만들어 주는거지

    if n < k : # 근데 n이 k보다 작으면
        break # 멈춰!
    result += 1 # 실행 횟수 더해주고
    n //= k # n을 k로 나눈 몫으로 초기화해

result += (n - 1) # k보다 작아진 n에 대해서는 1로 만들 때 n-1을 더해주면 횟수잖아?
print(result) # 결과 내봐

