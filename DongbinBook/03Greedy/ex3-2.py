'''
- 큰 수의 법칙 -

크기가 N인 배열에서 숫자를 더해 최대 합으로 만들려고 한다.
총 더하는 횟수는 M번이다.
한 숫자를 연속으로 더할 수 있는 최대치는 K이다.

ex) 5, 8, 3 / [2,4,5,4,6] : 8번 더하는데 최대 3번 더할 수 있다. 6+6+6+5+6+6+6+5 = 46
ex2) 5, 7, 2 / [3,4,3,4,3] : 8번 더하는데 최대 2번 더할 수 있다. 근데 최댓값인 4가 2개이므로 4+4+4+4+4+4+4 = 28이 된다.

입력 : N, M, K / 데이터 테이블(숫자 목록)

출력 : 최대값
'''
# 해결법은 가장 큰 숫자를 K번 만큼 더하고, 1번 두번째 큰 숫자를 더하는 방식으로 풀면 된다.
# 즉 K+1 번 만큼 반복하는 것으로 해도 될 것이다. K+1번 반복한 합을 구한 다음에.
# 하지만 본 .py의 목적은 예시를 해석하며 내 코드로 만들기 위함이므로 그대로 따라하겠다.

from itertools import count


n, m, k = map(int, input().split()) # n m k 입력 받기
data = list(map(int, input().split())) # 데이터 테이블 받기

data.sort() # 데이터 정렬. 가장 큰 두 값을 받기 위해
first = data[n-1] # 정렬을 내림차순으로 안했으니 마지막이 가장 큰 값
second = data[n-2] # 마지막에서 두번째가 두번째로 큰 값

result = 0 # 결과값

while True: # 일단 반복해라
    for i in range(k): # i가 k번 반복 할 거다.
        if m == 0: # 근데 일단 최대로 더하는 횟수가 끝나면
            break # for 반복문 하지 말고
        result += first # m이 남아있으면 m에다가 가장 큰 놈을 결과에 더해줘라
        m -= 1 # 더할 수 있는 제한 횟수도 줄여놓고
    if m == 0: # 최대로 더하는 횟수 끝나면
        break # while 반복문 그만해
    result += second # 큰 값을 k번 반복하고 왔구나? 그러면 두번째 큰 거 한 번 더해
    m -= 1 # 최대 덧셈 횟수 빼는거 잊지 말고~

print(result) #결과 출력


'''
--------구분선-------

아래는 가장 큰 수를 k번 더하고 두번째 큰 수를 1번 더하는 방식으로 만든 예시이다.


'''

n, m, k = map(int, input().split()) # n m k 입력 받기
data = list(map(int, input().split())) # 데이터 테이블 받기

data.sort() # 데이터 정렬. 가장 큰 두 값을 받기 위해
first = data[n-1] # 정렬을 내림차순으로 안했으니 마지막이 가장 큰 값
second = data[n-2] # 마지막에서 두번째가 두번째로 큰 값

count = int(m / (k + 1)) * k # k+1번 반복되고, m을 k+1로 나눠주면 가장 큰 수가 몇번 반복되는지 알 수 있다.
count += m % (k+1) # 끝이 두번쨰로 큰 수를 더하고 남은 만큼은 가장 큰 수를 더해주니까 이거까지 더해줘야 가장 큰 숫자를 더한 횟수다.

result = 0 # 결과값을 만든다
result += (count) * first # 젤 큰 값은 count만큼 더할거다
result += (m - count) * second # m에서 count를 빼면 그게 2번째로 큰 숫자 더한 만큼이지

print(result) #결과 출력








